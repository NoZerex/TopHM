CREATE TABLE clients (
    client_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    phone VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE tables (
    table_number INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    capacity INT NOT NULL CHECK (capacity > 0),
    status VARCHAR(20) DEFAULT 'свободен' CHECK (status IN ('свободен', 'забронирован'))
);


CREATE TABLE reservations (
    reservation_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    client_id INT REFERENCES clients(client_id),
    table_number INT REFERENCES tables(table_number),
    reservation_date DATE NOT NULL,
    reservation_time TIME NOT NULL,
    guests INT NOT NULL CHECK (guests > 0)

);

INSERT INTO clients (name, phone) VALUES
('Андрей', '+79031111111'),
('Наталья', '+79162222222'),
('Михаил', '+79033333333'),
('Екатерина', '+79164444444'),
('Артем', '+79035555555'),
('Виктория', '+79165555555'),
('Константин', '+79036666666'),
('Алина', '+79167777777'),
('Роман', '+79037777777'),
('Юлия', '+79168888888');


INSERT INTO tables (table_number, capacity, status) VALUES
(1, 2, 'свободен'),
(2, 4, 'забронирован'),
(3, 8, 'свободен'),
(4, 2, 'свободен'),
(5, 4, 'забронирован'),
(6, 8, 'свободен'),
(7, 2, 'свободен'),
(8, 6, 'забронирован'),
(9, 4, 'свободен'),
(10, 10, 'свободен');


INSERT INTO reservations (client_id, table_number, reservation_date, reservation_time, guests) VALUES
(1, 4, '14-02-2025', '9:00', 2),
(2, 5, '14-02-2025', '19:30', 4),
(3, 6, '14-02-2025', '20:00', 6),
(4, 7, '14-02-2025', '12:45', 2),
(5, 8, '14-02-2025', '14:15', 5),
(6, 9, '14-02-2025', '16:00', 3),
(6, 9, '15-02-2025', '12:00', 3),
(7, 10, '14-02-2025', '17:30', 8),
(8, 1, '14-02-2025', '21:00', 4),
(9, 2, '14-02-2025', '11:00', 2),
(10, 3, '14-02-2025', '15:30', 4);


SELECT
    c.name,
    COUNT(r.reservation_id) AS total_reservations
FROM clients c
LEFT JOIN reservations r USING (client_id)
GROUP BY c.name
ORDER BY total_reservations DESC;


SELECT
    c.name AS client_name,
    t.table_number,
    r.reservation_date,
    r.reservation_time,
    r.guests
FROM reservations r
JOIN clients c USING (client_id)
JOIN tables t USING (table_number)
WHERE r.reservation_date = '14-02-2025';


SELECT
    reservation_time,
    CASE
        WHEN reservation_time BETWEEN '12:00:00' AND '17:00:00' THEN 'День'
        WHEN reservation_time BETWEEN '17:00:01' AND '22:00:00' THEN 'Вечер'
        ELSE 'Утро'
    END AS time_category
FROM reservations;

CREATE OR REPLACE FUNCTION is_table_available(
    table_num INT,
    check_date DATE,
    check_time TIME
) RETURNS BOOLEAN AS $$
BEGIN
    IF NOT EXISTS (
        SELECT 1
        FROM tables
        WHERE table_number = table_num
          AND status = 'свободен'
    ) THEN
        RETURN FALSE;
    END IF;

    RETURN NOT EXISTS (
        SELECT 1
        FROM reservations
        WHERE table_number = table_num
          AND reservation_date = check_date
          AND reservation_time = check_time
    );
END;
$$ LANGUAGE plpgsql;


CREATE VIEW reservation_details AS
SELECT
    r.reservation_id,
    c.name AS client_name,
    t.table_number,
    t.capacity,
    r.reservation_date,
    r.reservation_time,
    r.guests,
    t.status AS table_status
FROM reservations r
JOIN clients c USING (client_id)
JOIN tables t USING (table_number);


SELECT
    c.name,
    COALESCE(SUM(r.guests), 0) AS total_guests
FROM clients c
LEFT JOIN reservations r USING (client_id)
GROUP BY c.name
ORDER BY total_guests DESC;

SELECT
    reservation_id,
    NULLIF(table_number, 10) AS modified_table_number
FROM reservations;

SELECT is_table_available(2, '2025-02-14', '19:30');
SELECT is_table_available(1, '2025-02-14', '15:00');